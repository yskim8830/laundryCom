<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.Laundry.data.dao.StockDao">
	<sql id="wheres">
		<if test="(is_release != null) and (!is_release.equals(''))">
			AND	ts.is_release = #{is_release}
		</if>
		<if test="(is_coupon != null) and (!is_coupon.equals(''))">
			AND	ts.is_coupon = #{is_coupon}
		</if>
		<if test="(payment != null) and (!payment.equals(''))">
			AND	ts.payment = #{payment}
		</if>
		<if test="(card != null) and (!card.equals(''))">
			AND	ts.card = #{card}
		</if>
		<if test="(delivery != null) and (!delivery.equals(''))">
			AND	ts.delivery = #{delivery}
		</if>
		<if test="(cust_id != null) and (!cust_id.equals(''))">
			AND ts.cust_id = #{cust_id}
		</if>
		<if test="(start_date != null) and (!start_date.equals(''))">
			AND DATE_FORMAT(ts.reg_dt, "%Y/%m/%d") <![CDATA[>=]]> #{start_date}
		</if>
		<if test="(end_date != null) and (!end_date.equals(''))">
			AND DATE_FORMAT(ts.reg_dt, "%Y/%m/%d") <![CDATA[<=]]> #{end_date}
		</if>
	</sql>

	<!-- 입고 조회 -->
	<select id="selectStock" resultType="kr.co.Laundry.data.dto.StockDto">
		/*kr.co.Laundry.data.dao.StockDao.selectStock*/
		SELECT  ts.seq
			, date_format(ts.reg_dt, "%Y-%m-%d") as reg_dt
			, ts.cust_id
			, tc.name AS cust_name
			, ts.prod_id
			, tp.name AS prod_name
			, tp.price
			, ts.amount
			, tp.price * ts.amount AS total_price
			, ts.stock_num
			, ts.etc
			, date_format(ts.rel_dt, "%Y-%m-%d") as rel_dt
			, ts.payment
			, ts.card
			, ts.delivery
			, ts.is_release
			, ts.is_coupon
		FROM	tb_stock ts
			, tb_prod tp, tb_cust tc
		WHERE	1=1 
		AND ts.prod_id = tp.seq
		AND ts.cust_id = tc.id
		<include refid="wheres" />
		ORDER BY ts.reg_dt DESC
  	</select>
  	<!-- 입고 조회 -->
	<select id="selectStockCnt" resultType="kr.co.Laundry.data.dto.DeadlineDto">
		/*kr.co.Laundry.data.dao.StockDao.selectStockCnt*/
		SELECT  count(1) AS totalCnt
				, sum(tp.price * ts.amount) AS totalAmt
		FROM	tb_stock ts
			, tb_prod tp, tb_cust tc
		WHERE	1=1 
		AND ts.prod_id = tp.seq
		AND ts.cust_id = tc.id
		<include refid="wheres" />
  	</select>
	<!-- 신규입고 저장 -->
	<insert id="insertStock">
		INSERT INTO tb_stock (prod_id,cust_id,amount,stock_num,etc,payment,card,delivery,is_coupon,rel_dt,reg_dt,mod_dt) 
		VALUES (
			${prod_id}
			, ${cust_id}
			, ${amount}
			, #{stock_num}
			, #{etc}
			, #{payment}
			, #{card}
			, #{delivery}
			, #{is_coupon}
			, #{rel_dt}
			, now()
			, now()
		)
	</insert>
	<!-- 입고 수정 -->
	<update id="updateStock">
		UPDATE tb_stock SET
			stock_num = #{stock_num}
			, etc = #{etc}
			, payment = #{payment}
			, card = #{card}
			, delivery = #{delivery}
			, rel_dt = #{rel_dt}
			, is_release =#{is_release} 
			, mod_dt = now()
		WHERE 1=1 
		<if test="(seq != null) and (!seq.equals(''))">
			AND seq = ${seq}
		</if>
	</update>
	<!-- 출고 처리 -->
	<update id="updateRelStock">
		UPDATE tb_stock SET
			is_release = 'Y'
			, card = #{card}
			, mod_dt = now()
		WHERE 1=1
		<if test="(seq != null) and (!seq.equals(''))">
			AND seq = ${seq}
		</if>
	</update>
	<delete id="deleteStock">
		DELETE FROM tb_stock WHERE 1=1 
		AND seq = ${seq}
	</delete>
</mapper>